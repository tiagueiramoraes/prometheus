apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus-server
---
#
# CRIAÇÃO DO CERTIFICADO
#
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: prometheus-com-tls
  namespace: monitoring
spec:
  secretName: prometheus-com-tls
  duration: 2160h # 90 dias
  renewBefore: 360h # 15 dias
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
    - 'prometheus01.longview.com.br'
---
#
# CONFIGURAÇÃO DO INGRESS JÁ CARREGANDO OS CERTIFICADOS
#
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-prometheus
  namespace: monitoring
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "*"
    #nginx.ingress.kubernetes.io/rewrite-target: /
    certmanager.k8s.io/cluster-issuer: 'letsencrypt-prod'
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/secure-backends: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "6000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "6000"
  labels:
    app: nginx
spec:
  tls:
  - hosts:
    - prometheus01.longview.com.br
    secretName: prometheus-com-tls
  rules:
  - host: prometheus01.longview.com.br
    http:
        paths:
        - backend:
            service:
              name: prometheus-service
              port: 
                number: 80
          pathType: Prefix
          path: /